# terminal settings.
export TERM="xterm-256color"
eval `dircolors ~/.dircolors`

# oh-my-zsh
ZSH=~/.oh-my-zsh
ZSH_THEME="qupeng"
DISABLE_AUTO_UPDATE="true"
CASE_SENSITIVE="true"
plugins=(rust rustup cargo pip git)

ZSH_CACHE_DIR=$HOME/.oh-my-zsh-cache
[[ ! -d $ZSH_CACHE_DIR ]] && mkdir $ZSH_CACHE_DIR

source $ZSH/oh-my-zsh.sh
unsetopt AUTO_CD  # disable auto_cd when type dirname

autoload -U compinit
compinit

# for syntax-highlighting.
highlighting=/usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
[ -f $highlighting ] && source $highlighting

# key maps and alias
bindkey '^_[[Z' reverse-menu-complete
alias rm="rm -i"
alias ls="ls -h --color=auto"
alias ll="ls -l"
alias cc="clear"
alias gg="exit"
alias vi="vim"
alias sc="systemctl"
alias scu="systemctl --user"
alias gst="git status"
alias gbv="git branch -v"
alias gd="git diff"
alias gdn="git diff --name-only"
alias gdt="git difftool"
alias gdtn="git difftool --name-only"

# general dev settings.
local_bin=~/.local/bin
cargo_bin=$CARGO_HOME/bin

bins=($local_bin $cargo_bin)
for bin in ${bins[@]}; do
	if [ -d $bin ] && [ `echo $PATH|grep $bin` ]; then
		export PATH=$bin:$PATH
	fi
done

# for go.
[[ -d ~/.cargo ]] && export CARGO_HOME=~/.cargo
[[ -d ~/.go ]] && export GOPATH=~/.go

# for rust.
rust_root=$(rustc --print sysroot 2>/dev/null)
if [ ! -z $rust_root ]; then
	export RUST_ROOT=$rust_root
	export RUST_SRC_PATH=$RUST_ROOT/lib/rustlib/src/rust/src
	if [ ! `echo $LD_LIBRARY_PATH|grep $RUST_ROOT` ]; then
		export LD_LIBRARY_PATH=$RUST_ROOT/lib:$LD_LIBRARY_PATH
		export LIBRARY_PATH=$RUST_ROOT/lib:$LIBRARY_PATH
	fi
fi

lib_paths=("/usr/local/lib" "$HOME/.local/lib")
for lib_path in ${lib_paths[@]}; do
	if [ ! `echo $LD_LIBRARY_PATH|grep $lib_path` ]; then
		export LD_LIBRARY_PATH=$lib_path:$LD_LIBRARY_PATH
		export LIBRARY_PATH=$lib_path:$LIBRARY_PATH
	fi
done

if [ ! `echo $MANPATH|grep -E "$HOME/.local/share/man"` ]; then
    export MANPATH=$HOME/.local/share/man:$MANPATH
fi

fg() {
	if [ $# -eq 1 && $1 == - ]; then
		builtin fg %-
	else
		builtin fg %"$@"
	fi
}

bg() {
	if [ $# -eq 1 && $1 == - ]; then
		builtin bg %-
	else
		builtin bg %"$@"
	fi
}
