" for vundle
source ~/.vim/plug_vimrc
source ~/.vim/basic_vimrc

" Leader
let mapleader=","

" 左右窗口设置
map <F5> :NERDTreeToggle<CR>

" 丢弃缓冲区，重新加载
map <C-l> :e!<CR>

" 头文件搜索路径，for C language
set path+=/usr/local/include
set path+=/usr/include/c++/6.3.1

" for taglist 
let Tlist_Show_One_File = 1
let Tlist_Exit_OnlyWindow = 1
let Tlist_Use_Right_Window = 1
let Tlist_Auto_Open = 0

" for gntentags
let g:gutentags_project_root = ['.root', '.svn', '.git', '.hg', '.project']
let g:gutentags_ctags_tagfile = '.tags'

" 将自动生成的 tags 文件全部放入 ~/.cache/tags 目录中，避免污染工程目录
let s:vim_tags = expand('~/.cache/tags')
let g:gutentags_cache_dir = s:vim_tags

" 配置 ctags 的参数
let g:gutentags_ctags_extra_args = ['--fields=+niazS', '--extra=+q']
let g:gutentags_ctags_extra_args += ['--c++-kinds=+px']
let g:gutentags_ctags_extra_args += ['--c-kinds=+px']

" 检测 ~/.cache/tags 不存在就新建
if !isdirectory(s:vim_tags)
   silent! call mkdir(s:vim_tags, 'p')
endif

" for ale
let g:ale_linters_explicit = 1
let g:ale_completion_delay = 500
let g:ale_echo_delay = 20
let g:ale_lint_delay = 500
let g:ale_echo_msg_format = '[%linter%] %code: %%s'
let g:ale_lint_on_text_changed = 'normal'
let g:ale_lint_on_insert_leave = 1
let g:airline#extensions#ale#enabled = 1

let g:ale_c_gcc_options = '-Wall -O2 -std=c99'
let g:ale_cpp_gcc_options = '-Wall -O2 -std=c++14'
let g:ale_c_cppcheck_options = ''
let g:ale_cpp_cppcheck_options = ''

" for NERDTree
let NERDChistmastree = 1

"for YouCompleteMe
let g:ycm_confirm_extra_conf = 0
let g:ycm_add_preview_to_completeopt = 0
let g:ycm_show_diagnostics_ui = 0
let g:ycm_server_log_level = 'info'
let g:ycm_min_num_identifier_candidate_chars = 4
let g:ycm_key_invoke_completion = '<c-x><c-o>'
let g:ycm_collect_identifiers_from_comments_and_strings = 0
let g:ycm_complete_in_strings=0
set completeopt=menu,menuone

let g:ycm_semantic_triggers =  {
            \ 'c,cpp,python,go,rust': ['re!\w{5}'],
            \ 'cs,lua,javascript': ['re!\w{5}'],
            \ }

au FileType c,cpp,rust nnoremap gd  :YcmCompleter GoToDefinition<CR>
au FileType c,cpp,rust nnoremap gs  :sp<CR> :YcmCompleter GoToDefinition<CR>
au FileType c,cpp,rust nnoremap gx  :vs<CR> :YcmCompleter GoToDefinition<CR>
au FileType c,cpp,rust nnoremap <leader>gd  :YcmCompleter GetDoc<CR>
au FileType cpp set shiftwidth=2

" for noexpandtab
function Tab8()
    set noexpandtab
    set tabstop=8
endfunction
au BufEnter,BufNew *.conf call Tab8()
au BufEnter,BufNew *.proto call Tab8()
au BufEnter,BufNew *.y call Tab8()

" for rust and racer
au BufEnter,BufNew *.rs set ft=rust
au BufEnter,BufNew *.lalrpop set ft=rust
let g:rustfmt_autosave = 0
" if $RUSTFMT_NOTSAVE
"     let g:rustfmt_autosave = 0
" else
"     let g:rustfmt_autosave = 1
" endif
